// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a DNSimple email forward resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dnsimple from "@pulumi/dnsimple";
 *
 * // Add an email forwarding rule to the domain
 * const foobar = new dnsimple.EmailForward("foobar", {
 *     aliasName: "sales",
 *     destinationEmail: "jane.doe@example.com",
 *     domain: _var.dnsimple_domain,
 * });
 * ```
 */
export class EmailForward extends pulumi.CustomResource {
    /**
     * Get an existing EmailForward resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailForwardState, opts?: pulumi.CustomResourceOptions): EmailForward {
        return new EmailForward(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dnsimple:index/emailForward:EmailForward';

    /**
     * Returns true if the given object is an instance of EmailForward.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailForward {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailForward.__pulumiType;
    }

    /**
     * The source email address on the domain
     */
    public /*out*/ readonly aliasEmail!: pulumi.Output<string>;
    /**
     * The name part (the part before the @) of the source email address on the domain
     */
    public readonly aliasName!: pulumi.Output<string>;
    /**
     * The destination email address on another domain
     */
    public readonly destinationEmail!: pulumi.Output<string>;
    /**
     * The domain to add the email forwarding rule to
     */
    public readonly domain!: pulumi.Output<string>;

    /**
     * Create a EmailForward resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailForwardArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailForwardArgs | EmailForwardState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmailForwardState | undefined;
            resourceInputs["aliasEmail"] = state ? state.aliasEmail : undefined;
            resourceInputs["aliasName"] = state ? state.aliasName : undefined;
            resourceInputs["destinationEmail"] = state ? state.destinationEmail : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
        } else {
            const args = argsOrState as EmailForwardArgs | undefined;
            if ((!args || args.aliasName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aliasName'");
            }
            if ((!args || args.destinationEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationEmail'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["aliasName"] = args ? args.aliasName : undefined;
            resourceInputs["destinationEmail"] = args ? args.destinationEmail : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["aliasEmail"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmailForward.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmailForward resources.
 */
export interface EmailForwardState {
    /**
     * The source email address on the domain
     */
    aliasEmail?: pulumi.Input<string>;
    /**
     * The name part (the part before the @) of the source email address on the domain
     */
    aliasName?: pulumi.Input<string>;
    /**
     * The destination email address on another domain
     */
    destinationEmail?: pulumi.Input<string>;
    /**
     * The domain to add the email forwarding rule to
     */
    domain?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmailForward resource.
 */
export interface EmailForwardArgs {
    /**
     * The name part (the part before the @) of the source email address on the domain
     */
    aliasName: pulumi.Input<string>;
    /**
     * The destination email address on another domain
     */
    destinationEmail: pulumi.Input<string>;
    /**
     * The domain to add the email forwarding rule to
     */
    domain: pulumi.Input<string>;
}
