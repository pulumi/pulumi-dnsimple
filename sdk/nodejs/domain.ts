// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a DNSimple domain resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dnsimple from "@pulumi/dnsimple";
 *
 * // Create a domain
 * const foobar = new dnsimple.Domain("foobar", {name: _var.dnsimple.domain});
 * ```
 *
 * ## Import
 *
 * DNSimple domains can be imported using their numeric record ID.
 *
 * ```sh
 * $ pulumi import dnsimple:index/domain:Domain resource_name 5678
 * ```
 *
 *  The record ID can be found within [DNSimple Domains API](https://developer.dnsimple.com/v2/domains/#listDomains). Check out [Authentication](https://developer.dnsimple.com/v2/#authentication) in API Overview for available options.
 *
 *  $ curl -u 'EMAIL:PASSWORD' https://api.dnsimple.com/v2/1234/domains?name_like=example.com | jq
 *
 *  {
 *
 *  "data": [
 *
 *  {
 *
 *  "id": 5678,
 *
 *  "account_id": 1234,
 *
 *  "registrant_id": null,
 *
 *  "name": "example.com",
 *
 *  "unicode_name": "example.com",
 *
 *  "state": "hosted",
 *
 *  "auto_renew": false,
 *
 *  "private_whois": false,
 *
 *  "expires_on": null,
 *
 *  "expires_at": null,
 *
 *  "created_at": "2021-10-01T00:00:00Z",
 *
 *  "updated_at": "2021-10-01T00:00:00Z"
 *
 *  }
 *
 *  ],
 *
 *  "pagination": {
 *
 *  "current_page": 1,
 *
 *  "per_page": 30,
 *
 *  "total_entries": 1,
 *
 *  "total_pages": 1
 *
 *  }
 *
 *  }
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dnsimple:index/domain:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    public /*out*/ readonly accountId!: pulumi.Output<number>;
    public /*out*/ readonly autoRenew!: pulumi.Output<boolean>;
    /**
     * The domain name to be created
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly privateWhois!: pulumi.Output<boolean>;
    public /*out*/ readonly registrantId!: pulumi.Output<number>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    public /*out*/ readonly unicodeName!: pulumi.Output<string>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainArgs | DomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["autoRenew"] = state ? state.autoRenew : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateWhois"] = state ? state.privateWhois : undefined;
            resourceInputs["registrantId"] = state ? state.registrantId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["unicodeName"] = state ? state.unicodeName : undefined;
        } else {
            const args = argsOrState as DomainArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["autoRenew"] = undefined /*out*/;
            resourceInputs["privateWhois"] = undefined /*out*/;
            resourceInputs["registrantId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["unicodeName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    accountId?: pulumi.Input<number>;
    autoRenew?: pulumi.Input<boolean>;
    /**
     * The domain name to be created
     */
    name?: pulumi.Input<string>;
    privateWhois?: pulumi.Input<boolean>;
    registrantId?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    unicodeName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * The domain name to be created
     */
    name: pulumi.Input<string>;
}
