// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dnsimple;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dnsimple.Utilities;
import com.pulumi.dnsimple.ZoneArgs;
import com.pulumi.dnsimple.inputs.ZoneState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a DNSimple zone resource.
 * 
 * &gt; Currently the resource creation acts as an import, so the zone must already exist in DNSimple. The only attribute that will be modified during resource creation is the `active` state of the zone. This is because our API does not allow for the creation of zones. Creation of zones happens through the purchase or creation of domains. We expect this behavior to change in the future.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.dnsimple.Zone;
 * import com.pulumi.dnsimple.ZoneArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a zone
 *         var foobar = new Zone("foobar", ZoneArgs.builder()
 *             .name(dnsimple.zone())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * DNSimple zones can be imported using their numeric record ID or the zone name.
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import dnsimple:index/zone:Zone resource_name foo.com
 * ```
 * 
 * The zone ID can be found within [DNSimple Zones API](https://developer.dnsimple.com/v2/zones/#getZone). Check out [Authentication](https://developer.dnsimple.com/v2/#authentication) in API Overview for available options.
 * 
 * bash
 * 
 * curl -H &#39;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&#39; https://api.dnsimple.com/v2/1234/zones/example.com | jq
 * 
 * {
 * 
 *   &#34;data&#34;: {
 * 
 *     &#34;id&#34;: 1,
 *     
 *     &#34;account_id&#34;: 1234,
 *     
 *     &#34;name&#34;: &#34;example.com&#34;,
 *     
 *     &#34;reverse&#34;: false,
 *     
 *     &#34;secondary&#34;: false,
 *     
 *     &#34;last_transferred_at&#34;: null,
 *     
 *     &#34;active&#34;: true,
 *     
 *     &#34;created_at&#34;: &#34;2023-04-18T04:58:01Z&#34;,
 *     
 *     &#34;updated_at&#34;: &#34;2024-01-16T15:53:18Z&#34;
 * 
 *   }
 * 
 * }
 * 
 */
@ResourceType(type="dnsimple:index/zone:Zone")
public class Zone extends com.pulumi.resources.CustomResource {
    /**
     * The account ID for the zone.
     * 
     */
    @Export(name="accountId", refs={Integer.class}, tree="[0]")
    private Output<Integer> accountId;

    /**
     * @return The account ID for the zone.
     * 
     */
    public Output<Integer> accountId() {
        return this.accountId;
    }
    /**
     * Whether the zone is active.
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> active;

    /**
     * @return Whether the zone is active.
     * 
     */
    public Output<Boolean> active() {
        return this.active;
    }
    /**
     * The last time the zone was transferred only applicable for **secondary** zones.
     * 
     */
    @Export(name="lastTransferredAt", refs={String.class}, tree="[0]")
    private Output<String> lastTransferredAt;

    /**
     * @return The last time the zone was transferred only applicable for **secondary** zones.
     * 
     */
    public Output<String> lastTransferredAt() {
        return this.lastTransferredAt;
    }
    /**
     * The zone name
     * 
     * # Attributes Reference
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The zone name
     * 
     * # Attributes Reference
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether the zone is a reverse zone.
     * 
     */
    @Export(name="reverse", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reverse;

    /**
     * @return Whether the zone is a reverse zone.
     * 
     */
    public Output<Boolean> reverse() {
        return this.reverse;
    }
    /**
     * Whether the zone is a secondary zone.
     * 
     */
    @Export(name="secondary", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> secondary;

    /**
     * @return Whether the zone is a secondary zone.
     * 
     */
    public Output<Boolean> secondary() {
        return this.secondary;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Zone(String name) {
        this(name, ZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Zone(String name, ZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Zone(String name, ZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dnsimple:index/zone:Zone", name, args == null ? ZoneArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Zone(String name, Output<String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dnsimple:index/zone:Zone", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Zone get(String name, Output<String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Zone(name, id, state, options);
    }
}
