// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dnsimple;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dnsimple.DomainDelegationArgs;
import com.pulumi.dnsimple.Utilities;
import com.pulumi.dnsimple.inputs.DomainDelegationState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.dnsimple.DomainDelegation;
 * import com.pulumi.dnsimple.DomainDelegationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a domain delegation
 *         var foobar = new DomainDelegation("foobar", DomainDelegationArgs.builder()
 *             .domain(dnsimple.domain())
 *             .nameServers(            
 *                 "ns1.example.org",
 *                 "ns2.example.com")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * DNSimple domain delegations can be imported using the domain name.
 * 
 * **Importing domain delegation for example.com**
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import dnsimple:index/domainDelegation:DomainDelegation resource_name example.com
 * ```
 * 
 */
@ResourceType(type="dnsimple:index/domainDelegation:DomainDelegation")
public class DomainDelegation extends com.pulumi.resources.CustomResource {
    /**
     * The domain name.
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output<String> domain;

    /**
     * @return The domain name.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * The list of name servers to delegate to.
     * 
     * # Attributes Reference
     * 
     */
    @Export(name="nameServers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> nameServers;

    /**
     * @return The list of name servers to delegate to.
     * 
     * # Attributes Reference
     * 
     */
    public Output<List<String>> nameServers() {
        return this.nameServers;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainDelegation(String name) {
        this(name, DomainDelegationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainDelegation(String name, DomainDelegationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainDelegation(String name, DomainDelegationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dnsimple:index/domainDelegation:DomainDelegation", name, args == null ? DomainDelegationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DomainDelegation(String name, Output<String> id, @Nullable DomainDelegationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dnsimple:index/domainDelegation:DomainDelegation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainDelegation get(String name, Output<String> id, @Nullable DomainDelegationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DomainDelegation(name, id, state, options);
    }
}
