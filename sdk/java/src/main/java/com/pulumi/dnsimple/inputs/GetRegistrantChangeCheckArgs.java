// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dnsimple.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRegistrantChangeCheckArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRegistrantChangeCheckArgs Empty = new GetRegistrantChangeCheckArgs();

    @Import(name="contactId", required=true)
    private Output<String> contactId;

    public Output<String> contactId() {
        return this.contactId;
    }

    @Import(name="domainId", required=true)
    private Output<String> domainId;

    public Output<String> domainId() {
        return this.domainId;
    }

    private GetRegistrantChangeCheckArgs() {}

    private GetRegistrantChangeCheckArgs(GetRegistrantChangeCheckArgs $) {
        this.contactId = $.contactId;
        this.domainId = $.domainId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRegistrantChangeCheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRegistrantChangeCheckArgs $;

        public Builder() {
            $ = new GetRegistrantChangeCheckArgs();
        }

        public Builder(GetRegistrantChangeCheckArgs defaults) {
            $ = new GetRegistrantChangeCheckArgs(Objects.requireNonNull(defaults));
        }

        public Builder contactId(Output<String> contactId) {
            $.contactId = contactId;
            return this;
        }

        public Builder contactId(String contactId) {
            return contactId(Output.of(contactId));
        }

        public Builder domainId(Output<String> domainId) {
            $.domainId = domainId;
            return this;
        }

        public Builder domainId(String domainId) {
            return domainId(Output.of(domainId));
        }

        public GetRegistrantChangeCheckArgs build() {
            if ($.contactId == null) {
                throw new MissingRequiredPropertyException("GetRegistrantChangeCheckArgs", "contactId");
            }
            if ($.domainId == null) {
                throw new MissingRequiredPropertyException("GetRegistrantChangeCheckArgs", "domainId");
            }
            return $;
        }
    }

}
