// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dnsimple

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DNS Record types.
type RecordTypes string

const (
	RecordTypesA     = RecordTypes("A")
	RecordTypesAAAA  = RecordTypes("AAAA")
	RecordTypesALIAS = RecordTypes("ALIAS")
	RecordTypesCAA   = RecordTypes("CAA")
	RecordTypesCNAME = RecordTypes("CNAME")
	RecordTypesHINFO = RecordTypes("HINFO")
	RecordTypesMX    = RecordTypes("MX")
	RecordTypesNAPTR = RecordTypes("NAPTR")
	RecordTypesNS    = RecordTypes("NS")
	RecordTypesPOOL  = RecordTypes("POOL")
	RecordTypesPTR   = RecordTypes("PTR")
	RecordTypesSPF   = RecordTypes("SPF")
	RecordTypesSRV   = RecordTypes("SRV")
	RecordTypesSSHFP = RecordTypes("SSHFP")
	RecordTypesTXT   = RecordTypes("TXT")
	RecordTypesURL   = RecordTypes("URL")
)

func (RecordTypes) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordTypes)(nil)).Elem()
}

func (e RecordTypes) ToRecordTypesOutput() RecordTypesOutput {
	return pulumi.ToOutput(e).(RecordTypesOutput)
}

func (e RecordTypes) ToRecordTypesOutputWithContext(ctx context.Context) RecordTypesOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RecordTypesOutput)
}

func (e RecordTypes) ToRecordTypesPtrOutput() RecordTypesPtrOutput {
	return e.ToRecordTypesPtrOutputWithContext(context.Background())
}

func (e RecordTypes) ToRecordTypesPtrOutputWithContext(ctx context.Context) RecordTypesPtrOutput {
	return RecordTypes(e).ToRecordTypesOutputWithContext(ctx).ToRecordTypesPtrOutputWithContext(ctx)
}

func (e RecordTypes) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordTypes) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RecordTypes) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RecordTypes) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RecordTypesOutput struct{ *pulumi.OutputState }

func (RecordTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordTypes)(nil)).Elem()
}

func (o RecordTypesOutput) ToRecordTypesOutput() RecordTypesOutput {
	return o
}

func (o RecordTypesOutput) ToRecordTypesOutputWithContext(ctx context.Context) RecordTypesOutput {
	return o
}

func (o RecordTypesOutput) ToRecordTypesPtrOutput() RecordTypesPtrOutput {
	return o.ToRecordTypesPtrOutputWithContext(context.Background())
}

func (o RecordTypesOutput) ToRecordTypesPtrOutputWithContext(ctx context.Context) RecordTypesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecordTypes) *RecordTypes {
		return &v
	}).(RecordTypesPtrOutput)
}

func (o RecordTypesOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RecordTypesOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordTypes) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RecordTypesOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordTypesOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RecordTypes) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RecordTypesPtrOutput struct{ *pulumi.OutputState }

func (RecordTypesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecordTypes)(nil)).Elem()
}

func (o RecordTypesPtrOutput) ToRecordTypesPtrOutput() RecordTypesPtrOutput {
	return o
}

func (o RecordTypesPtrOutput) ToRecordTypesPtrOutputWithContext(ctx context.Context) RecordTypesPtrOutput {
	return o
}

func (o RecordTypesPtrOutput) Elem() RecordTypesOutput {
	return o.ApplyT(func(v *RecordTypes) RecordTypes {
		if v != nil {
			return *v
		}
		var ret RecordTypes
		return ret
	}).(RecordTypesOutput)
}

func (o RecordTypesPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RecordTypesPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RecordTypes) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RecordTypesInput is an input type that accepts values of the RecordTypes enum
// A concrete instance of `RecordTypesInput` can be one of the following:
//
//	RecordTypesA
//	RecordTypesAAAA
//	RecordTypesALIAS
//	RecordTypesCAA
//	RecordTypesCNAME
//	RecordTypesHINFO
//	RecordTypesMX
//	RecordTypesNAPTR
//	RecordTypesNS
//	RecordTypesPOOL
//	RecordTypesPTR
//	RecordTypesSPF
//	RecordTypesSRV
//	RecordTypesSSHFP
//	RecordTypesTXT
//	RecordTypesURL
type RecordTypesInput interface {
	pulumi.Input

	ToRecordTypesOutput() RecordTypesOutput
	ToRecordTypesOutputWithContext(context.Context) RecordTypesOutput
}

var recordTypesPtrType = reflect.TypeOf((**RecordTypes)(nil)).Elem()

type RecordTypesPtrInput interface {
	pulumi.Input

	ToRecordTypesPtrOutput() RecordTypesPtrOutput
	ToRecordTypesPtrOutputWithContext(context.Context) RecordTypesPtrOutput
}

type recordTypesPtr string

func RecordTypesPtr(v string) RecordTypesPtrInput {
	return (*recordTypesPtr)(&v)
}

func (*recordTypesPtr) ElementType() reflect.Type {
	return recordTypesPtrType
}

func (in *recordTypesPtr) ToRecordTypesPtrOutput() RecordTypesPtrOutput {
	return pulumi.ToOutput(in).(RecordTypesPtrOutput)
}

func (in *recordTypesPtr) ToRecordTypesPtrOutputWithContext(ctx context.Context) RecordTypesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RecordTypesPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RecordTypesInput)(nil)).Elem(), RecordTypes("A"))
	pulumi.RegisterInputType(reflect.TypeOf((*RecordTypesPtrInput)(nil)).Elem(), RecordTypes("A"))
	pulumi.RegisterOutputType(RecordTypesOutput{})
	pulumi.RegisterOutputType(RecordTypesPtrOutput{})
}
