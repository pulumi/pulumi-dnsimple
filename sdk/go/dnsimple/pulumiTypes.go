// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dnsimple

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-dnsimple/sdk/v4/go/dnsimple/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type RegisteredDomainDomainRegistration struct {
	// The ID of this resource.
	Id *int `pulumi:"id"`
	// The registration period in years.
	Period *int `pulumi:"period"`
	// The state of the domain.
	State *string `pulumi:"state"`
}

// RegisteredDomainDomainRegistrationInput is an input type that accepts RegisteredDomainDomainRegistrationArgs and RegisteredDomainDomainRegistrationOutput values.
// You can construct a concrete instance of `RegisteredDomainDomainRegistrationInput` via:
//
//	RegisteredDomainDomainRegistrationArgs{...}
type RegisteredDomainDomainRegistrationInput interface {
	pulumi.Input

	ToRegisteredDomainDomainRegistrationOutput() RegisteredDomainDomainRegistrationOutput
	ToRegisteredDomainDomainRegistrationOutputWithContext(context.Context) RegisteredDomainDomainRegistrationOutput
}

type RegisteredDomainDomainRegistrationArgs struct {
	// The ID of this resource.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// The registration period in years.
	Period pulumi.IntPtrInput `pulumi:"period"`
	// The state of the domain.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (RegisteredDomainDomainRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainDomainRegistration)(nil)).Elem()
}

func (i RegisteredDomainDomainRegistrationArgs) ToRegisteredDomainDomainRegistrationOutput() RegisteredDomainDomainRegistrationOutput {
	return i.ToRegisteredDomainDomainRegistrationOutputWithContext(context.Background())
}

func (i RegisteredDomainDomainRegistrationArgs) ToRegisteredDomainDomainRegistrationOutputWithContext(ctx context.Context) RegisteredDomainDomainRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainDomainRegistrationOutput)
}

func (i RegisteredDomainDomainRegistrationArgs) ToRegisteredDomainDomainRegistrationPtrOutput() RegisteredDomainDomainRegistrationPtrOutput {
	return i.ToRegisteredDomainDomainRegistrationPtrOutputWithContext(context.Background())
}

func (i RegisteredDomainDomainRegistrationArgs) ToRegisteredDomainDomainRegistrationPtrOutputWithContext(ctx context.Context) RegisteredDomainDomainRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainDomainRegistrationOutput).ToRegisteredDomainDomainRegistrationPtrOutputWithContext(ctx)
}

// RegisteredDomainDomainRegistrationPtrInput is an input type that accepts RegisteredDomainDomainRegistrationArgs, RegisteredDomainDomainRegistrationPtr and RegisteredDomainDomainRegistrationPtrOutput values.
// You can construct a concrete instance of `RegisteredDomainDomainRegistrationPtrInput` via:
//
//	        RegisteredDomainDomainRegistrationArgs{...}
//
//	or:
//
//	        nil
type RegisteredDomainDomainRegistrationPtrInput interface {
	pulumi.Input

	ToRegisteredDomainDomainRegistrationPtrOutput() RegisteredDomainDomainRegistrationPtrOutput
	ToRegisteredDomainDomainRegistrationPtrOutputWithContext(context.Context) RegisteredDomainDomainRegistrationPtrOutput
}

type registeredDomainDomainRegistrationPtrType RegisteredDomainDomainRegistrationArgs

func RegisteredDomainDomainRegistrationPtr(v *RegisteredDomainDomainRegistrationArgs) RegisteredDomainDomainRegistrationPtrInput {
	return (*registeredDomainDomainRegistrationPtrType)(v)
}

func (*registeredDomainDomainRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainDomainRegistration)(nil)).Elem()
}

func (i *registeredDomainDomainRegistrationPtrType) ToRegisteredDomainDomainRegistrationPtrOutput() RegisteredDomainDomainRegistrationPtrOutput {
	return i.ToRegisteredDomainDomainRegistrationPtrOutputWithContext(context.Background())
}

func (i *registeredDomainDomainRegistrationPtrType) ToRegisteredDomainDomainRegistrationPtrOutputWithContext(ctx context.Context) RegisteredDomainDomainRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainDomainRegistrationPtrOutput)
}

type RegisteredDomainDomainRegistrationOutput struct{ *pulumi.OutputState }

func (RegisteredDomainDomainRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainDomainRegistration)(nil)).Elem()
}

func (o RegisteredDomainDomainRegistrationOutput) ToRegisteredDomainDomainRegistrationOutput() RegisteredDomainDomainRegistrationOutput {
	return o
}

func (o RegisteredDomainDomainRegistrationOutput) ToRegisteredDomainDomainRegistrationOutputWithContext(ctx context.Context) RegisteredDomainDomainRegistrationOutput {
	return o
}

func (o RegisteredDomainDomainRegistrationOutput) ToRegisteredDomainDomainRegistrationPtrOutput() RegisteredDomainDomainRegistrationPtrOutput {
	return o.ToRegisteredDomainDomainRegistrationPtrOutputWithContext(context.Background())
}

func (o RegisteredDomainDomainRegistrationOutput) ToRegisteredDomainDomainRegistrationPtrOutputWithContext(ctx context.Context) RegisteredDomainDomainRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegisteredDomainDomainRegistration) *RegisteredDomainDomainRegistration {
		return &v
	}).(RegisteredDomainDomainRegistrationPtrOutput)
}

// The ID of this resource.
func (o RegisteredDomainDomainRegistrationOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegisteredDomainDomainRegistration) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// The registration period in years.
func (o RegisteredDomainDomainRegistrationOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegisteredDomainDomainRegistration) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// The state of the domain.
func (o RegisteredDomainDomainRegistrationOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainDomainRegistration) *string { return v.State }).(pulumi.StringPtrOutput)
}

type RegisteredDomainDomainRegistrationPtrOutput struct{ *pulumi.OutputState }

func (RegisteredDomainDomainRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainDomainRegistration)(nil)).Elem()
}

func (o RegisteredDomainDomainRegistrationPtrOutput) ToRegisteredDomainDomainRegistrationPtrOutput() RegisteredDomainDomainRegistrationPtrOutput {
	return o
}

func (o RegisteredDomainDomainRegistrationPtrOutput) ToRegisteredDomainDomainRegistrationPtrOutputWithContext(ctx context.Context) RegisteredDomainDomainRegistrationPtrOutput {
	return o
}

func (o RegisteredDomainDomainRegistrationPtrOutput) Elem() RegisteredDomainDomainRegistrationOutput {
	return o.ApplyT(func(v *RegisteredDomainDomainRegistration) RegisteredDomainDomainRegistration {
		if v != nil {
			return *v
		}
		var ret RegisteredDomainDomainRegistration
		return ret
	}).(RegisteredDomainDomainRegistrationOutput)
}

// The ID of this resource.
func (o RegisteredDomainDomainRegistrationPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainDomainRegistration) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// The registration period in years.
func (o RegisteredDomainDomainRegistrationPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainDomainRegistration) *int {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.IntPtrOutput)
}

// The state of the domain.
func (o RegisteredDomainDomainRegistrationPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainDomainRegistration) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type RegisteredDomainRegistrantChange struct {
	// DNSimple Account ID to which the registrant change belongs to
	AccountId *int `pulumi:"accountId"`
	// The ID of the contact to be used for the domain registration. The contact ID can be changed after the domain has been registered. The change will result in a new registrant change this may result in a [60-day lock](https://support.dnsimple.com/articles/icann-60-day-lock-registrant-change/).
	ContactId *int `pulumi:"contactId"`
	// DNSimple domain ID for which the registrant change is being performed
	DomainId *string `pulumi:"domainId"`
	// A map of extended attributes to be set for the domain registration. To see if there are any required extended attributes for any TLD use our [Lists the TLD Extended Attributes API](https://developer.dnsimple.com/v2/tlds/#getTldExtendedAttributes). The values provided in the `extendedAttributes` will also be sent when a registrant change is initiated as part of changing the `contactId`.
	ExtendedAttributes map[string]string `pulumi:"extendedAttributes"`
	// The ID of this resource.
	Id *int `pulumi:"id"`
	// Date when the registrant change lock was lifted for the domain
	IrtLockLiftedBy *string `pulumi:"irtLockLiftedBy"`
	// True if the registrant change will result in a registry owner change
	RegistryOwnerChange *bool `pulumi:"registryOwnerChange"`
	// The state of the domain.
	State *string `pulumi:"state"`
}

// RegisteredDomainRegistrantChangeInput is an input type that accepts RegisteredDomainRegistrantChangeArgs and RegisteredDomainRegistrantChangeOutput values.
// You can construct a concrete instance of `RegisteredDomainRegistrantChangeInput` via:
//
//	RegisteredDomainRegistrantChangeArgs{...}
type RegisteredDomainRegistrantChangeInput interface {
	pulumi.Input

	ToRegisteredDomainRegistrantChangeOutput() RegisteredDomainRegistrantChangeOutput
	ToRegisteredDomainRegistrantChangeOutputWithContext(context.Context) RegisteredDomainRegistrantChangeOutput
}

type RegisteredDomainRegistrantChangeArgs struct {
	// DNSimple Account ID to which the registrant change belongs to
	AccountId pulumi.IntPtrInput `pulumi:"accountId"`
	// The ID of the contact to be used for the domain registration. The contact ID can be changed after the domain has been registered. The change will result in a new registrant change this may result in a [60-day lock](https://support.dnsimple.com/articles/icann-60-day-lock-registrant-change/).
	ContactId pulumi.IntPtrInput `pulumi:"contactId"`
	// DNSimple domain ID for which the registrant change is being performed
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// A map of extended attributes to be set for the domain registration. To see if there are any required extended attributes for any TLD use our [Lists the TLD Extended Attributes API](https://developer.dnsimple.com/v2/tlds/#getTldExtendedAttributes). The values provided in the `extendedAttributes` will also be sent when a registrant change is initiated as part of changing the `contactId`.
	ExtendedAttributes pulumi.StringMapInput `pulumi:"extendedAttributes"`
	// The ID of this resource.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Date when the registrant change lock was lifted for the domain
	IrtLockLiftedBy pulumi.StringPtrInput `pulumi:"irtLockLiftedBy"`
	// True if the registrant change will result in a registry owner change
	RegistryOwnerChange pulumi.BoolPtrInput `pulumi:"registryOwnerChange"`
	// The state of the domain.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (RegisteredDomainRegistrantChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainRegistrantChange)(nil)).Elem()
}

func (i RegisteredDomainRegistrantChangeArgs) ToRegisteredDomainRegistrantChangeOutput() RegisteredDomainRegistrantChangeOutput {
	return i.ToRegisteredDomainRegistrantChangeOutputWithContext(context.Background())
}

func (i RegisteredDomainRegistrantChangeArgs) ToRegisteredDomainRegistrantChangeOutputWithContext(ctx context.Context) RegisteredDomainRegistrantChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainRegistrantChangeOutput)
}

func (i RegisteredDomainRegistrantChangeArgs) ToRegisteredDomainRegistrantChangePtrOutput() RegisteredDomainRegistrantChangePtrOutput {
	return i.ToRegisteredDomainRegistrantChangePtrOutputWithContext(context.Background())
}

func (i RegisteredDomainRegistrantChangeArgs) ToRegisteredDomainRegistrantChangePtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainRegistrantChangeOutput).ToRegisteredDomainRegistrantChangePtrOutputWithContext(ctx)
}

// RegisteredDomainRegistrantChangePtrInput is an input type that accepts RegisteredDomainRegistrantChangeArgs, RegisteredDomainRegistrantChangePtr and RegisteredDomainRegistrantChangePtrOutput values.
// You can construct a concrete instance of `RegisteredDomainRegistrantChangePtrInput` via:
//
//	        RegisteredDomainRegistrantChangeArgs{...}
//
//	or:
//
//	        nil
type RegisteredDomainRegistrantChangePtrInput interface {
	pulumi.Input

	ToRegisteredDomainRegistrantChangePtrOutput() RegisteredDomainRegistrantChangePtrOutput
	ToRegisteredDomainRegistrantChangePtrOutputWithContext(context.Context) RegisteredDomainRegistrantChangePtrOutput
}

type registeredDomainRegistrantChangePtrType RegisteredDomainRegistrantChangeArgs

func RegisteredDomainRegistrantChangePtr(v *RegisteredDomainRegistrantChangeArgs) RegisteredDomainRegistrantChangePtrInput {
	return (*registeredDomainRegistrantChangePtrType)(v)
}

func (*registeredDomainRegistrantChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainRegistrantChange)(nil)).Elem()
}

func (i *registeredDomainRegistrantChangePtrType) ToRegisteredDomainRegistrantChangePtrOutput() RegisteredDomainRegistrantChangePtrOutput {
	return i.ToRegisteredDomainRegistrantChangePtrOutputWithContext(context.Background())
}

func (i *registeredDomainRegistrantChangePtrType) ToRegisteredDomainRegistrantChangePtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainRegistrantChangePtrOutput)
}

type RegisteredDomainRegistrantChangeOutput struct{ *pulumi.OutputState }

func (RegisteredDomainRegistrantChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainRegistrantChange)(nil)).Elem()
}

func (o RegisteredDomainRegistrantChangeOutput) ToRegisteredDomainRegistrantChangeOutput() RegisteredDomainRegistrantChangeOutput {
	return o
}

func (o RegisteredDomainRegistrantChangeOutput) ToRegisteredDomainRegistrantChangeOutputWithContext(ctx context.Context) RegisteredDomainRegistrantChangeOutput {
	return o
}

func (o RegisteredDomainRegistrantChangeOutput) ToRegisteredDomainRegistrantChangePtrOutput() RegisteredDomainRegistrantChangePtrOutput {
	return o.ToRegisteredDomainRegistrantChangePtrOutputWithContext(context.Background())
}

func (o RegisteredDomainRegistrantChangeOutput) ToRegisteredDomainRegistrantChangePtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegisteredDomainRegistrantChange) *RegisteredDomainRegistrantChange {
		return &v
	}).(RegisteredDomainRegistrantChangePtrOutput)
}

// DNSimple Account ID to which the registrant change belongs to
func (o RegisteredDomainRegistrantChangeOutput) AccountId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) *int { return v.AccountId }).(pulumi.IntPtrOutput)
}

// The ID of the contact to be used for the domain registration. The contact ID can be changed after the domain has been registered. The change will result in a new registrant change this may result in a [60-day lock](https://support.dnsimple.com/articles/icann-60-day-lock-registrant-change/).
func (o RegisteredDomainRegistrantChangeOutput) ContactId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) *int { return v.ContactId }).(pulumi.IntPtrOutput)
}

// DNSimple domain ID for which the registrant change is being performed
func (o RegisteredDomainRegistrantChangeOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// A map of extended attributes to be set for the domain registration. To see if there are any required extended attributes for any TLD use our [Lists the TLD Extended Attributes API](https://developer.dnsimple.com/v2/tlds/#getTldExtendedAttributes). The values provided in the `extendedAttributes` will also be sent when a registrant change is initiated as part of changing the `contactId`.
func (o RegisteredDomainRegistrantChangeOutput) ExtendedAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) map[string]string { return v.ExtendedAttributes }).(pulumi.StringMapOutput)
}

// The ID of this resource.
func (o RegisteredDomainRegistrantChangeOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Date when the registrant change lock was lifted for the domain
func (o RegisteredDomainRegistrantChangeOutput) IrtLockLiftedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) *string { return v.IrtLockLiftedBy }).(pulumi.StringPtrOutput)
}

// True if the registrant change will result in a registry owner change
func (o RegisteredDomainRegistrantChangeOutput) RegistryOwnerChange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) *bool { return v.RegistryOwnerChange }).(pulumi.BoolPtrOutput)
}

// The state of the domain.
func (o RegisteredDomainRegistrantChangeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantChange) *string { return v.State }).(pulumi.StringPtrOutput)
}

type RegisteredDomainRegistrantChangePtrOutput struct{ *pulumi.OutputState }

func (RegisteredDomainRegistrantChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainRegistrantChange)(nil)).Elem()
}

func (o RegisteredDomainRegistrantChangePtrOutput) ToRegisteredDomainRegistrantChangePtrOutput() RegisteredDomainRegistrantChangePtrOutput {
	return o
}

func (o RegisteredDomainRegistrantChangePtrOutput) ToRegisteredDomainRegistrantChangePtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantChangePtrOutput {
	return o
}

func (o RegisteredDomainRegistrantChangePtrOutput) Elem() RegisteredDomainRegistrantChangeOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) RegisteredDomainRegistrantChange {
		if v != nil {
			return *v
		}
		var ret RegisteredDomainRegistrantChange
		return ret
	}).(RegisteredDomainRegistrantChangeOutput)
}

// DNSimple Account ID to which the registrant change belongs to
func (o RegisteredDomainRegistrantChangePtrOutput) AccountId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) *int {
		if v == nil {
			return nil
		}
		return v.AccountId
	}).(pulumi.IntPtrOutput)
}

// The ID of the contact to be used for the domain registration. The contact ID can be changed after the domain has been registered. The change will result in a new registrant change this may result in a [60-day lock](https://support.dnsimple.com/articles/icann-60-day-lock-registrant-change/).
func (o RegisteredDomainRegistrantChangePtrOutput) ContactId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) *int {
		if v == nil {
			return nil
		}
		return v.ContactId
	}).(pulumi.IntPtrOutput)
}

// DNSimple domain ID for which the registrant change is being performed
func (o RegisteredDomainRegistrantChangePtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// A map of extended attributes to be set for the domain registration. To see if there are any required extended attributes for any TLD use our [Lists the TLD Extended Attributes API](https://developer.dnsimple.com/v2/tlds/#getTldExtendedAttributes). The values provided in the `extendedAttributes` will also be sent when a registrant change is initiated as part of changing the `contactId`.
func (o RegisteredDomainRegistrantChangePtrOutput) ExtendedAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtendedAttributes
	}).(pulumi.StringMapOutput)
}

// The ID of this resource.
func (o RegisteredDomainRegistrantChangePtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Date when the registrant change lock was lifted for the domain
func (o RegisteredDomainRegistrantChangePtrOutput) IrtLockLiftedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) *string {
		if v == nil {
			return nil
		}
		return v.IrtLockLiftedBy
	}).(pulumi.StringPtrOutput)
}

// True if the registrant change will result in a registry owner change
func (o RegisteredDomainRegistrantChangePtrOutput) RegistryOwnerChange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) *bool {
		if v == nil {
			return nil
		}
		return v.RegistryOwnerChange
	}).(pulumi.BoolPtrOutput)
}

// The state of the domain.
func (o RegisteredDomainRegistrantChangePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantChange) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type RegisteredDomainTimeouts struct {
	// Create timeout.
	Create *string `pulumi:"create"`
	// Delete timeout (currently unused).
	Delete *string `pulumi:"delete"`
	// Update timeout.
	Update *string `pulumi:"update"`
}

// RegisteredDomainTimeoutsInput is an input type that accepts RegisteredDomainTimeoutsArgs and RegisteredDomainTimeoutsOutput values.
// You can construct a concrete instance of `RegisteredDomainTimeoutsInput` via:
//
//	RegisteredDomainTimeoutsArgs{...}
type RegisteredDomainTimeoutsInput interface {
	pulumi.Input

	ToRegisteredDomainTimeoutsOutput() RegisteredDomainTimeoutsOutput
	ToRegisteredDomainTimeoutsOutputWithContext(context.Context) RegisteredDomainTimeoutsOutput
}

type RegisteredDomainTimeoutsArgs struct {
	// Create timeout.
	Create pulumi.StringPtrInput `pulumi:"create"`
	// Delete timeout (currently unused).
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// Update timeout.
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (RegisteredDomainTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainTimeouts)(nil)).Elem()
}

func (i RegisteredDomainTimeoutsArgs) ToRegisteredDomainTimeoutsOutput() RegisteredDomainTimeoutsOutput {
	return i.ToRegisteredDomainTimeoutsOutputWithContext(context.Background())
}

func (i RegisteredDomainTimeoutsArgs) ToRegisteredDomainTimeoutsOutputWithContext(ctx context.Context) RegisteredDomainTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainTimeoutsOutput)
}

func (i RegisteredDomainTimeoutsArgs) ToRegisteredDomainTimeoutsPtrOutput() RegisteredDomainTimeoutsPtrOutput {
	return i.ToRegisteredDomainTimeoutsPtrOutputWithContext(context.Background())
}

func (i RegisteredDomainTimeoutsArgs) ToRegisteredDomainTimeoutsPtrOutputWithContext(ctx context.Context) RegisteredDomainTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainTimeoutsOutput).ToRegisteredDomainTimeoutsPtrOutputWithContext(ctx)
}

// RegisteredDomainTimeoutsPtrInput is an input type that accepts RegisteredDomainTimeoutsArgs, RegisteredDomainTimeoutsPtr and RegisteredDomainTimeoutsPtrOutput values.
// You can construct a concrete instance of `RegisteredDomainTimeoutsPtrInput` via:
//
//	        RegisteredDomainTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RegisteredDomainTimeoutsPtrInput interface {
	pulumi.Input

	ToRegisteredDomainTimeoutsPtrOutput() RegisteredDomainTimeoutsPtrOutput
	ToRegisteredDomainTimeoutsPtrOutputWithContext(context.Context) RegisteredDomainTimeoutsPtrOutput
}

type registeredDomainTimeoutsPtrType RegisteredDomainTimeoutsArgs

func RegisteredDomainTimeoutsPtr(v *RegisteredDomainTimeoutsArgs) RegisteredDomainTimeoutsPtrInput {
	return (*registeredDomainTimeoutsPtrType)(v)
}

func (*registeredDomainTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainTimeouts)(nil)).Elem()
}

func (i *registeredDomainTimeoutsPtrType) ToRegisteredDomainTimeoutsPtrOutput() RegisteredDomainTimeoutsPtrOutput {
	return i.ToRegisteredDomainTimeoutsPtrOutputWithContext(context.Background())
}

func (i *registeredDomainTimeoutsPtrType) ToRegisteredDomainTimeoutsPtrOutputWithContext(ctx context.Context) RegisteredDomainTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainTimeoutsPtrOutput)
}

type RegisteredDomainTimeoutsOutput struct{ *pulumi.OutputState }

func (RegisteredDomainTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainTimeouts)(nil)).Elem()
}

func (o RegisteredDomainTimeoutsOutput) ToRegisteredDomainTimeoutsOutput() RegisteredDomainTimeoutsOutput {
	return o
}

func (o RegisteredDomainTimeoutsOutput) ToRegisteredDomainTimeoutsOutputWithContext(ctx context.Context) RegisteredDomainTimeoutsOutput {
	return o
}

func (o RegisteredDomainTimeoutsOutput) ToRegisteredDomainTimeoutsPtrOutput() RegisteredDomainTimeoutsPtrOutput {
	return o.ToRegisteredDomainTimeoutsPtrOutputWithContext(context.Background())
}

func (o RegisteredDomainTimeoutsOutput) ToRegisteredDomainTimeoutsPtrOutputWithContext(ctx context.Context) RegisteredDomainTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegisteredDomainTimeouts) *RegisteredDomainTimeouts {
		return &v
	}).(RegisteredDomainTimeoutsPtrOutput)
}

// Create timeout.
func (o RegisteredDomainTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// Delete timeout (currently unused).
func (o RegisteredDomainTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// Update timeout.
func (o RegisteredDomainTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type RegisteredDomainTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RegisteredDomainTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainTimeouts)(nil)).Elem()
}

func (o RegisteredDomainTimeoutsPtrOutput) ToRegisteredDomainTimeoutsPtrOutput() RegisteredDomainTimeoutsPtrOutput {
	return o
}

func (o RegisteredDomainTimeoutsPtrOutput) ToRegisteredDomainTimeoutsPtrOutputWithContext(ctx context.Context) RegisteredDomainTimeoutsPtrOutput {
	return o
}

func (o RegisteredDomainTimeoutsPtrOutput) Elem() RegisteredDomainTimeoutsOutput {
	return o.ApplyT(func(v *RegisteredDomainTimeouts) RegisteredDomainTimeouts {
		if v != nil {
			return *v
		}
		var ret RegisteredDomainTimeouts
		return ret
	}).(RegisteredDomainTimeoutsOutput)
}

// Create timeout.
func (o RegisteredDomainTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// Delete timeout (currently unused).
func (o RegisteredDomainTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// Update timeout.
func (o RegisteredDomainTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GetCertificateTimeouts struct {
	// (String) - The timeout for the read operation e.g. `5m`
	Read *string `pulumi:"read"`
}

// GetCertificateTimeoutsInput is an input type that accepts GetCertificateTimeoutsArgs and GetCertificateTimeoutsOutput values.
// You can construct a concrete instance of `GetCertificateTimeoutsInput` via:
//
//	GetCertificateTimeoutsArgs{...}
type GetCertificateTimeoutsInput interface {
	pulumi.Input

	ToGetCertificateTimeoutsOutput() GetCertificateTimeoutsOutput
	ToGetCertificateTimeoutsOutputWithContext(context.Context) GetCertificateTimeoutsOutput
}

type GetCertificateTimeoutsArgs struct {
	// (String) - The timeout for the read operation e.g. `5m`
	Read pulumi.StringPtrInput `pulumi:"read"`
}

func (GetCertificateTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateTimeouts)(nil)).Elem()
}

func (i GetCertificateTimeoutsArgs) ToGetCertificateTimeoutsOutput() GetCertificateTimeoutsOutput {
	return i.ToGetCertificateTimeoutsOutputWithContext(context.Background())
}

func (i GetCertificateTimeoutsArgs) ToGetCertificateTimeoutsOutputWithContext(ctx context.Context) GetCertificateTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateTimeoutsOutput)
}

func (i GetCertificateTimeoutsArgs) ToGetCertificateTimeoutsPtrOutput() GetCertificateTimeoutsPtrOutput {
	return i.ToGetCertificateTimeoutsPtrOutputWithContext(context.Background())
}

func (i GetCertificateTimeoutsArgs) ToGetCertificateTimeoutsPtrOutputWithContext(ctx context.Context) GetCertificateTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateTimeoutsOutput).ToGetCertificateTimeoutsPtrOutputWithContext(ctx)
}

// GetCertificateTimeoutsPtrInput is an input type that accepts GetCertificateTimeoutsArgs, GetCertificateTimeoutsPtr and GetCertificateTimeoutsPtrOutput values.
// You can construct a concrete instance of `GetCertificateTimeoutsPtrInput` via:
//
//	        GetCertificateTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GetCertificateTimeoutsPtrInput interface {
	pulumi.Input

	ToGetCertificateTimeoutsPtrOutput() GetCertificateTimeoutsPtrOutput
	ToGetCertificateTimeoutsPtrOutputWithContext(context.Context) GetCertificateTimeoutsPtrOutput
}

type getCertificateTimeoutsPtrType GetCertificateTimeoutsArgs

func GetCertificateTimeoutsPtr(v *GetCertificateTimeoutsArgs) GetCertificateTimeoutsPtrInput {
	return (*getCertificateTimeoutsPtrType)(v)
}

func (*getCertificateTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCertificateTimeouts)(nil)).Elem()
}

func (i *getCertificateTimeoutsPtrType) ToGetCertificateTimeoutsPtrOutput() GetCertificateTimeoutsPtrOutput {
	return i.ToGetCertificateTimeoutsPtrOutputWithContext(context.Background())
}

func (i *getCertificateTimeoutsPtrType) ToGetCertificateTimeoutsPtrOutputWithContext(ctx context.Context) GetCertificateTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificateTimeoutsPtrOutput)
}

type GetCertificateTimeoutsOutput struct{ *pulumi.OutputState }

func (GetCertificateTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateTimeouts)(nil)).Elem()
}

func (o GetCertificateTimeoutsOutput) ToGetCertificateTimeoutsOutput() GetCertificateTimeoutsOutput {
	return o
}

func (o GetCertificateTimeoutsOutput) ToGetCertificateTimeoutsOutputWithContext(ctx context.Context) GetCertificateTimeoutsOutput {
	return o
}

func (o GetCertificateTimeoutsOutput) ToGetCertificateTimeoutsPtrOutput() GetCertificateTimeoutsPtrOutput {
	return o.ToGetCertificateTimeoutsPtrOutputWithContext(context.Background())
}

func (o GetCertificateTimeoutsOutput) ToGetCertificateTimeoutsPtrOutputWithContext(ctx context.Context) GetCertificateTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetCertificateTimeouts) *GetCertificateTimeouts {
		return &v
	}).(GetCertificateTimeoutsPtrOutput)
}

// (String) - The timeout for the read operation e.g. `5m`
func (o GetCertificateTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type GetCertificateTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GetCertificateTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetCertificateTimeouts)(nil)).Elem()
}

func (o GetCertificateTimeoutsPtrOutput) ToGetCertificateTimeoutsPtrOutput() GetCertificateTimeoutsPtrOutput {
	return o
}

func (o GetCertificateTimeoutsPtrOutput) ToGetCertificateTimeoutsPtrOutputWithContext(ctx context.Context) GetCertificateTimeoutsPtrOutput {
	return o
}

func (o GetCertificateTimeoutsPtrOutput) Elem() GetCertificateTimeoutsOutput {
	return o.ApplyT(func(v *GetCertificateTimeouts) GetCertificateTimeouts {
		if v != nil {
			return *v
		}
		var ret GetCertificateTimeouts
		return ret
	}).(GetCertificateTimeoutsOutput)
}

// (String) - The timeout for the read operation e.g. `5m`
func (o GetCertificateTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetCertificateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type GetRegistrantChangeCheckExtendedAttribute struct {
	Description string                                            `pulumi:"description"`
	Name        string                                            `pulumi:"name"`
	Options     []GetRegistrantChangeCheckExtendedAttributeOption `pulumi:"options"`
	Required    bool                                              `pulumi:"required"`
}

// GetRegistrantChangeCheckExtendedAttributeInput is an input type that accepts GetRegistrantChangeCheckExtendedAttributeArgs and GetRegistrantChangeCheckExtendedAttributeOutput values.
// You can construct a concrete instance of `GetRegistrantChangeCheckExtendedAttributeInput` via:
//
//	GetRegistrantChangeCheckExtendedAttributeArgs{...}
type GetRegistrantChangeCheckExtendedAttributeInput interface {
	pulumi.Input

	ToGetRegistrantChangeCheckExtendedAttributeOutput() GetRegistrantChangeCheckExtendedAttributeOutput
	ToGetRegistrantChangeCheckExtendedAttributeOutputWithContext(context.Context) GetRegistrantChangeCheckExtendedAttributeOutput
}

type GetRegistrantChangeCheckExtendedAttributeArgs struct {
	Description pulumi.StringInput                                        `pulumi:"description"`
	Name        pulumi.StringInput                                        `pulumi:"name"`
	Options     GetRegistrantChangeCheckExtendedAttributeOptionArrayInput `pulumi:"options"`
	Required    pulumi.BoolInput                                          `pulumi:"required"`
}

func (GetRegistrantChangeCheckExtendedAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttribute)(nil)).Elem()
}

func (i GetRegistrantChangeCheckExtendedAttributeArgs) ToGetRegistrantChangeCheckExtendedAttributeOutput() GetRegistrantChangeCheckExtendedAttributeOutput {
	return i.ToGetRegistrantChangeCheckExtendedAttributeOutputWithContext(context.Background())
}

func (i GetRegistrantChangeCheckExtendedAttributeArgs) ToGetRegistrantChangeCheckExtendedAttributeOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistrantChangeCheckExtendedAttributeOutput)
}

// GetRegistrantChangeCheckExtendedAttributeArrayInput is an input type that accepts GetRegistrantChangeCheckExtendedAttributeArray and GetRegistrantChangeCheckExtendedAttributeArrayOutput values.
// You can construct a concrete instance of `GetRegistrantChangeCheckExtendedAttributeArrayInput` via:
//
//	GetRegistrantChangeCheckExtendedAttributeArray{ GetRegistrantChangeCheckExtendedAttributeArgs{...} }
type GetRegistrantChangeCheckExtendedAttributeArrayInput interface {
	pulumi.Input

	ToGetRegistrantChangeCheckExtendedAttributeArrayOutput() GetRegistrantChangeCheckExtendedAttributeArrayOutput
	ToGetRegistrantChangeCheckExtendedAttributeArrayOutputWithContext(context.Context) GetRegistrantChangeCheckExtendedAttributeArrayOutput
}

type GetRegistrantChangeCheckExtendedAttributeArray []GetRegistrantChangeCheckExtendedAttributeInput

func (GetRegistrantChangeCheckExtendedAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegistrantChangeCheckExtendedAttribute)(nil)).Elem()
}

func (i GetRegistrantChangeCheckExtendedAttributeArray) ToGetRegistrantChangeCheckExtendedAttributeArrayOutput() GetRegistrantChangeCheckExtendedAttributeArrayOutput {
	return i.ToGetRegistrantChangeCheckExtendedAttributeArrayOutputWithContext(context.Background())
}

func (i GetRegistrantChangeCheckExtendedAttributeArray) ToGetRegistrantChangeCheckExtendedAttributeArrayOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistrantChangeCheckExtendedAttributeArrayOutput)
}

type GetRegistrantChangeCheckExtendedAttributeOutput struct{ *pulumi.OutputState }

func (GetRegistrantChangeCheckExtendedAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttribute)(nil)).Elem()
}

func (o GetRegistrantChangeCheckExtendedAttributeOutput) ToGetRegistrantChangeCheckExtendedAttributeOutput() GetRegistrantChangeCheckExtendedAttributeOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeOutput) ToGetRegistrantChangeCheckExtendedAttributeOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistrantChangeCheckExtendedAttribute) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetRegistrantChangeCheckExtendedAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistrantChangeCheckExtendedAttribute) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRegistrantChangeCheckExtendedAttributeOutput) Options() GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput {
	return o.ApplyT(func(v GetRegistrantChangeCheckExtendedAttribute) []GetRegistrantChangeCheckExtendedAttributeOption {
		return v.Options
	}).(GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput)
}

func (o GetRegistrantChangeCheckExtendedAttributeOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRegistrantChangeCheckExtendedAttribute) bool { return v.Required }).(pulumi.BoolOutput)
}

type GetRegistrantChangeCheckExtendedAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetRegistrantChangeCheckExtendedAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegistrantChangeCheckExtendedAttribute)(nil)).Elem()
}

func (o GetRegistrantChangeCheckExtendedAttributeArrayOutput) ToGetRegistrantChangeCheckExtendedAttributeArrayOutput() GetRegistrantChangeCheckExtendedAttributeArrayOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeArrayOutput) ToGetRegistrantChangeCheckExtendedAttributeArrayOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeArrayOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeArrayOutput) Index(i pulumi.IntInput) GetRegistrantChangeCheckExtendedAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegistrantChangeCheckExtendedAttribute {
		return vs[0].([]GetRegistrantChangeCheckExtendedAttribute)[vs[1].(int)]
	}).(GetRegistrantChangeCheckExtendedAttributeOutput)
}

type GetRegistrantChangeCheckExtendedAttributeOption struct {
	Description string `pulumi:"description"`
	Title       string `pulumi:"title"`
	Value       string `pulumi:"value"`
}

// GetRegistrantChangeCheckExtendedAttributeOptionInput is an input type that accepts GetRegistrantChangeCheckExtendedAttributeOptionArgs and GetRegistrantChangeCheckExtendedAttributeOptionOutput values.
// You can construct a concrete instance of `GetRegistrantChangeCheckExtendedAttributeOptionInput` via:
//
//	GetRegistrantChangeCheckExtendedAttributeOptionArgs{...}
type GetRegistrantChangeCheckExtendedAttributeOptionInput interface {
	pulumi.Input

	ToGetRegistrantChangeCheckExtendedAttributeOptionOutput() GetRegistrantChangeCheckExtendedAttributeOptionOutput
	ToGetRegistrantChangeCheckExtendedAttributeOptionOutputWithContext(context.Context) GetRegistrantChangeCheckExtendedAttributeOptionOutput
}

type GetRegistrantChangeCheckExtendedAttributeOptionArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Title       pulumi.StringInput `pulumi:"title"`
	Value       pulumi.StringInput `pulumi:"value"`
}

func (GetRegistrantChangeCheckExtendedAttributeOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttributeOption)(nil)).Elem()
}

func (i GetRegistrantChangeCheckExtendedAttributeOptionArgs) ToGetRegistrantChangeCheckExtendedAttributeOptionOutput() GetRegistrantChangeCheckExtendedAttributeOptionOutput {
	return i.ToGetRegistrantChangeCheckExtendedAttributeOptionOutputWithContext(context.Background())
}

func (i GetRegistrantChangeCheckExtendedAttributeOptionArgs) ToGetRegistrantChangeCheckExtendedAttributeOptionOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistrantChangeCheckExtendedAttributeOptionOutput)
}

// GetRegistrantChangeCheckExtendedAttributeOptionArrayInput is an input type that accepts GetRegistrantChangeCheckExtendedAttributeOptionArray and GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput values.
// You can construct a concrete instance of `GetRegistrantChangeCheckExtendedAttributeOptionArrayInput` via:
//
//	GetRegistrantChangeCheckExtendedAttributeOptionArray{ GetRegistrantChangeCheckExtendedAttributeOptionArgs{...} }
type GetRegistrantChangeCheckExtendedAttributeOptionArrayInput interface {
	pulumi.Input

	ToGetRegistrantChangeCheckExtendedAttributeOptionArrayOutput() GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput
	ToGetRegistrantChangeCheckExtendedAttributeOptionArrayOutputWithContext(context.Context) GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput
}

type GetRegistrantChangeCheckExtendedAttributeOptionArray []GetRegistrantChangeCheckExtendedAttributeOptionInput

func (GetRegistrantChangeCheckExtendedAttributeOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegistrantChangeCheckExtendedAttributeOption)(nil)).Elem()
}

func (i GetRegistrantChangeCheckExtendedAttributeOptionArray) ToGetRegistrantChangeCheckExtendedAttributeOptionArrayOutput() GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput {
	return i.ToGetRegistrantChangeCheckExtendedAttributeOptionArrayOutputWithContext(context.Background())
}

func (i GetRegistrantChangeCheckExtendedAttributeOptionArray) ToGetRegistrantChangeCheckExtendedAttributeOptionArrayOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput)
}

type GetRegistrantChangeCheckExtendedAttributeOptionOutput struct{ *pulumi.OutputState }

func (GetRegistrantChangeCheckExtendedAttributeOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttributeOption)(nil)).Elem()
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionOutput) ToGetRegistrantChangeCheckExtendedAttributeOptionOutput() GetRegistrantChangeCheckExtendedAttributeOptionOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionOutput) ToGetRegistrantChangeCheckExtendedAttributeOptionOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeOptionOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistrantChangeCheckExtendedAttributeOption) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistrantChangeCheckExtendedAttributeOption) string { return v.Title }).(pulumi.StringOutput)
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistrantChangeCheckExtendedAttributeOption) string { return v.Value }).(pulumi.StringOutput)
}

type GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput struct{ *pulumi.OutputState }

func (GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegistrantChangeCheckExtendedAttributeOption)(nil)).Elem()
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput) ToGetRegistrantChangeCheckExtendedAttributeOptionArrayOutput() GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput) ToGetRegistrantChangeCheckExtendedAttributeOptionArrayOutputWithContext(ctx context.Context) GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput {
	return o
}

func (o GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput) Index(i pulumi.IntInput) GetRegistrantChangeCheckExtendedAttributeOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegistrantChangeCheckExtendedAttributeOption {
		return vs[0].([]GetRegistrantChangeCheckExtendedAttributeOption)[vs[1].(int)]
	}).(GetRegistrantChangeCheckExtendedAttributeOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainDomainRegistrationInput)(nil)).Elem(), RegisteredDomainDomainRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainDomainRegistrationPtrInput)(nil)).Elem(), RegisteredDomainDomainRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainRegistrantChangeInput)(nil)).Elem(), RegisteredDomainRegistrantChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainRegistrantChangePtrInput)(nil)).Elem(), RegisteredDomainRegistrantChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainTimeoutsInput)(nil)).Elem(), RegisteredDomainTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainTimeoutsPtrInput)(nil)).Elem(), RegisteredDomainTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateTimeoutsInput)(nil)).Elem(), GetCertificateTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCertificateTimeoutsPtrInput)(nil)).Elem(), GetCertificateTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttributeInput)(nil)).Elem(), GetRegistrantChangeCheckExtendedAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttributeArrayInput)(nil)).Elem(), GetRegistrantChangeCheckExtendedAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttributeOptionInput)(nil)).Elem(), GetRegistrantChangeCheckExtendedAttributeOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistrantChangeCheckExtendedAttributeOptionArrayInput)(nil)).Elem(), GetRegistrantChangeCheckExtendedAttributeOptionArray{})
	pulumi.RegisterOutputType(RegisteredDomainDomainRegistrationOutput{})
	pulumi.RegisterOutputType(RegisteredDomainDomainRegistrationPtrOutput{})
	pulumi.RegisterOutputType(RegisteredDomainRegistrantChangeOutput{})
	pulumi.RegisterOutputType(RegisteredDomainRegistrantChangePtrOutput{})
	pulumi.RegisterOutputType(RegisteredDomainTimeoutsOutput{})
	pulumi.RegisterOutputType(RegisteredDomainTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetCertificateTimeoutsOutput{})
	pulumi.RegisterOutputType(GetCertificateTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetRegistrantChangeCheckExtendedAttributeOutput{})
	pulumi.RegisterOutputType(GetRegistrantChangeCheckExtendedAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetRegistrantChangeCheckExtendedAttributeOptionOutput{})
	pulumi.RegisterOutputType(GetRegistrantChangeCheckExtendedAttributeOptionArrayOutput{})
}
