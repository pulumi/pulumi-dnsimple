// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dnsimple

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCertificate(ctx *pulumi.Context, args *GetCertificateArgs, opts ...pulumi.InvokeOption) (*GetCertificateResult, error) {
	var rv GetCertificateResult
	err := ctx.Invoke("dnsimple:index/getCertificate:getCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificate.
type GetCertificateArgs struct {
	CertificateId string `pulumi:"certificateId"`
	Domain        string `pulumi:"domain"`
}

// A collection of values returned by getCertificate.
type GetCertificateResult struct {
	CertificateChains []string `pulumi:"certificateChains"`
	CertificateId     string   `pulumi:"certificateId"`
	Domain            string   `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	PrivateKey        string `pulumi:"privateKey"`
	RootCertificate   string `pulumi:"rootCertificate"`
	ServerCertificate string `pulumi:"serverCertificate"`
}

func GetCertificateOutput(ctx *pulumi.Context, args GetCertificateOutputArgs, opts ...pulumi.InvokeOption) GetCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCertificateResult, error) {
			args := v.(GetCertificateArgs)
			r, err := GetCertificate(ctx, &args, opts...)
			var s GetCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCertificateResultOutput)
}

// A collection of arguments for invoking getCertificate.
type GetCertificateOutputArgs struct {
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
	Domain        pulumi.StringInput `pulumi:"domain"`
}

func (GetCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getCertificate.
type GetCertificateResultOutput struct{ *pulumi.OutputState }

func (GetCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateResult)(nil)).Elem()
}

func (o GetCertificateResultOutput) ToGetCertificateResultOutput() GetCertificateResultOutput {
	return o
}

func (o GetCertificateResultOutput) ToGetCertificateResultOutputWithContext(ctx context.Context) GetCertificateResultOutput {
	return o
}

func (o GetCertificateResultOutput) CertificateChains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCertificateResult) []string { return v.CertificateChains }).(pulumi.StringArrayOutput)
}

func (o GetCertificateResultOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) RootCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.RootCertificate }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) ServerCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.ServerCertificate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCertificateResultOutput{})
}
