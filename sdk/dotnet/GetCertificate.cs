// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DNSimple
{
    public static class GetCertificate
    {
        public static Task<GetCertificateResult> InvokeAsync(GetCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateResult>("dnsimple:index/getCertificate:getCertificate", args ?? new GetCertificateArgs(), options.WithDefaults());

        public static Output<GetCertificateResult> Invoke(GetCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateResult>("dnsimple:index/getCertificate:getCertificate", args ?? new GetCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public string CertificateId { get; set; } = null!;

        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        public GetCertificateArgs()
        {
        }
        public static new GetCertificateArgs Empty => new GetCertificateArgs();
    }

    public sealed class GetCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public Input<string> CertificateId { get; set; } = null!;

        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        public GetCertificateInvokeArgs()
        {
        }
        public static new GetCertificateInvokeArgs Empty => new GetCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateResult
    {
        public readonly ImmutableArray<string> CertificateChains;
        public readonly string CertificateId;
        public readonly string Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PrivateKey;
        public readonly string RootCertificate;
        public readonly string ServerCertificate;

        [OutputConstructor]
        private GetCertificateResult(
            ImmutableArray<string> certificateChains,

            string certificateId,

            string domain,

            string id,

            string privateKey,

            string rootCertificate,

            string serverCertificate)
        {
            CertificateChains = certificateChains;
            CertificateId = certificateId;
            Domain = domain;
            Id = id;
            PrivateKey = privateKey;
            RootCertificate = rootCertificate;
            ServerCertificate = serverCertificate;
        }
    }
}
