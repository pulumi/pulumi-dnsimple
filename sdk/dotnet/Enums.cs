// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.DNSimple
{
    /// <summary>
    /// DNS Record types.
    /// </summary>
    [EnumType]
    public readonly struct RecordTypes : IEquatable<RecordTypes>
    {
        private readonly string _value;

        private RecordTypes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static RecordTypes A { get; } = new RecordTypes("A");
        public static RecordTypes AAAA { get; } = new RecordTypes("AAAA");
        public static RecordTypes ALIAS { get; } = new RecordTypes("ALIAS");
        public static RecordTypes CAA { get; } = new RecordTypes("CAA");
        public static RecordTypes CNAME { get; } = new RecordTypes("CNAME");
        public static RecordTypes HINFO { get; } = new RecordTypes("HINFO");
        public static RecordTypes MX { get; } = new RecordTypes("MX");
        public static RecordTypes NAPTR { get; } = new RecordTypes("NAPTR");
        public static RecordTypes NS { get; } = new RecordTypes("NS");
        public static RecordTypes POOL { get; } = new RecordTypes("POOL");
        public static RecordTypes PTR { get; } = new RecordTypes("PTR");
        public static RecordTypes SPF { get; } = new RecordTypes("SPF");
        public static RecordTypes SRV { get; } = new RecordTypes("SRV");
        public static RecordTypes SSHFP { get; } = new RecordTypes("SSHFP");
        public static RecordTypes TXT { get; } = new RecordTypes("TXT");
        public static RecordTypes URL { get; } = new RecordTypes("URL");

        public static bool operator ==(RecordTypes left, RecordTypes right) => left.Equals(right);
        public static bool operator !=(RecordTypes left, RecordTypes right) => !left.Equals(right);

        public static explicit operator string(RecordTypes value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RecordTypes other && Equals(other);
        public bool Equals(RecordTypes other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
