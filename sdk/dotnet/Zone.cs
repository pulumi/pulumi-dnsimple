// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DNSimple
{
    /// <summary>
    /// Provides a DNSimple zone resource.
    /// 
    /// &gt; Currently the resource creation acts as an import, so the zone must already exist in DNSimple. The only attribute that will be modified during resource creation is the `active` state of the zone. This is because our API does not allow for the creation of zones. Creation of zones happens through the purchase or creation of domains. We expect this behavior to change in the future.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using DNSimple = Pulumi.DNSimple;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a zone
    ///     var foobar = new DNSimple.Zone("foobar", new()
    ///     {
    ///         Name = dnsimple.Zone,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DNSimple zones can be imported using their numeric record ID or the zone name.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import dnsimple:index/zone:Zone resource_name foo.com
    /// ```
    /// 
    /// The zone ID can be found within [DNSimple Zones API](https://developer.dnsimple.com/v2/zones/#getZone). Check out [Authentication](https://developer.dnsimple.com/v2/#authentication) in API Overview for available options.
    /// 
    /// bash
    /// 
    /// curl -H 'Authorization: Bearer &lt;ACCESS_TOKEN&gt;' https://api.dnsimple.com/v2/1234/zones/example.com | jq
    /// 
    /// {
    /// 
    ///   "data": {
    /// 
    ///     "id": 1,
    ///     
    ///     "account_id": 1234,
    ///     
    ///     "name": "example.com",
    ///     
    ///     "reverse": false,
    ///     
    ///     "secondary": false,
    ///     
    ///     "last_transferred_at": null,
    ///     
    ///     "active": true,
    ///     
    ///     "created_at": "2023-04-18T04:58:01Z",
    ///     
    ///     "updated_at": "2024-01-16T15:53:18Z"
    /// 
    ///   }
    /// 
    /// }
    /// </summary>
    [DNSimpleResourceType("dnsimple:index/zone:Zone")]
    public partial class Zone : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account ID for the zone.
        /// </summary>
        [Output("accountId")]
        public Output<int> AccountId { get; private set; } = null!;

        /// <summary>
        /// Whether the zone is active.
        /// </summary>
        [Output("active")]
        public Output<bool> Active { get; private set; } = null!;

        /// <summary>
        /// The last time the zone was transferred only applicable for **secondary** zones.
        /// </summary>
        [Output("lastTransferredAt")]
        public Output<string> LastTransferredAt { get; private set; } = null!;

        /// <summary>
        /// The zone name
        /// 
        /// # Attributes Reference
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether the zone is a reverse zone.
        /// </summary>
        [Output("reverse")]
        public Output<bool> Reverse { get; private set; } = null!;

        /// <summary>
        /// Whether the zone is a secondary zone.
        /// </summary>
        [Output("secondary")]
        public Output<bool> Secondary { get; private set; } = null!;


        /// <summary>
        /// Create a Zone resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Zone(string name, ZoneArgs args, CustomResourceOptions? options = null)
            : base("dnsimple:index/zone:Zone", name, args ?? new ZoneArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Zone(string name, Input<string> id, ZoneState? state = null, CustomResourceOptions? options = null)
            : base("dnsimple:index/zone:Zone", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Zone resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Zone Get(string name, Input<string> id, ZoneState? state = null, CustomResourceOptions? options = null)
        {
            return new Zone(name, id, state, options);
        }
    }

    public sealed class ZoneArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the zone is active.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The zone name
        /// 
        /// # Attributes Reference
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ZoneArgs()
        {
        }
        public static new ZoneArgs Empty => new ZoneArgs();
    }

    public sealed class ZoneState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account ID for the zone.
        /// </summary>
        [Input("accountId")]
        public Input<int>? AccountId { get; set; }

        /// <summary>
        /// Whether the zone is active.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The last time the zone was transferred only applicable for **secondary** zones.
        /// </summary>
        [Input("lastTransferredAt")]
        public Input<string>? LastTransferredAt { get; set; }

        /// <summary>
        /// The zone name
        /// 
        /// # Attributes Reference
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the zone is a reverse zone.
        /// </summary>
        [Input("reverse")]
        public Input<bool>? Reverse { get; set; }

        /// <summary>
        /// Whether the zone is a secondary zone.
        /// </summary>
        [Input("secondary")]
        public Input<bool>? Secondary { get; set; }

        public ZoneState()
        {
        }
        public static new ZoneState Empty => new ZoneState();
    }
}
