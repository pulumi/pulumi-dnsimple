{
    "name": "dnsimple",
    "description": "A Pulumi package for creating and managing dnsimple cloud resources.",
    "keywords": [
        "pulumi",
        "dnsimple"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`dnsimple` Terraform Provider](https://github.com/dnsimple/terraform-provider-dnsimple).",
    "repository": "https://github.com/pulumi/pulumi-dnsimple",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "dnsimple": "DNSimple"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-dnsimple/sdk/v3/go/dnsimple"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing dnsimple cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/dnsimple/terraform-provider-dnsimple)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-dnsimple` repo](https://github.com/pulumi/pulumi-dnsimple/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-dnsimple` repo](https://github.com/dnsimple/terraform-provider-dnsimple/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/dnsimple/terraform-provider-dnsimple)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-dnsimple` repo](https://github.com/pulumi/pulumi-dnsimple/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-dnsimple` repo](https://github.com/dnsimple/terraform-provider-dnsimple/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "account": {
                "type": "string",
                "description": "The account for API operations.\n"
            },
            "prefetch": {
                "type": "boolean",
                "description": "Flag to enable the prefetch of zone records.\n"
            },
            "sandbox": {
                "type": "boolean",
                "description": "Flag to enable the sandbox API.\n"
            },
            "token": {
                "type": "string",
                "description": "The API v2 token for API operations.\n",
                "secret": true
            },
            "userAgent": {
                "type": "string",
                "description": "Custom string to append to the user agent used for sending HTTP requests to the API.\n"
            }
        },
        "defaults": [
            "account",
            "token"
        ]
    },
    "provider": {
        "description": "The provider type for the dnsimple package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "account": {
                "type": "string",
                "description": "The account for API operations.\n"
            },
            "prefetch": {
                "type": "boolean",
                "description": "Flag to enable the prefetch of zone records.\n"
            },
            "sandbox": {
                "type": "boolean",
                "description": "Flag to enable the sandbox API.\n"
            },
            "token": {
                "type": "string",
                "description": "The API v2 token for API operations.\n",
                "secret": true
            },
            "userAgent": {
                "type": "string",
                "description": "Custom string to append to the user agent used for sending HTTP requests to the API.\n"
            }
        },
        "required": [
            "account",
            "token"
        ],
        "inputProperties": {
            "account": {
                "type": "string",
                "description": "The account for API operations.\n"
            },
            "prefetch": {
                "type": "boolean",
                "description": "Flag to enable the prefetch of zone records.\n"
            },
            "sandbox": {
                "type": "boolean",
                "description": "Flag to enable the sandbox API.\n"
            },
            "token": {
                "type": "string",
                "description": "The API v2 token for API operations.\n",
                "secret": true
            },
            "userAgent": {
                "type": "string",
                "description": "Custom string to append to the user agent used for sending HTTP requests to the API.\n"
            }
        },
        "requiredInputs": [
            "account",
            "token"
        ]
    },
    "resources": {
        "dnsimple:index/domain:Domain": {
            "properties": {
                "accountId": {
                    "type": "integer"
                },
                "autoRenew": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "privateWhois": {
                    "type": "boolean"
                },
                "registrantId": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "unicodeName": {
                    "type": "string"
                }
            },
            "required": [
                "accountId",
                "autoRenew",
                "name",
                "privateWhois",
                "registrantId",
                "state",
                "unicodeName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Domain resources.\n",
                "properties": {
                    "accountId": {
                        "type": "integer"
                    },
                    "autoRenew": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateWhois": {
                        "type": "boolean"
                    },
                    "registrantId": {
                        "type": "integer"
                    },
                    "state": {
                        "type": "string"
                    },
                    "unicodeName": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "dnsimple:index/emailForward:EmailForward": {
            "properties": {
                "aliasEmail": {
                    "type": "string"
                },
                "aliasName": {
                    "type": "string"
                },
                "destinationEmail": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                }
            },
            "required": [
                "aliasEmail",
                "aliasName",
                "destinationEmail",
                "domain"
            ],
            "inputProperties": {
                "aliasName": {
                    "type": "string"
                },
                "destinationEmail": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "aliasName",
                "destinationEmail",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailForward resources.\n",
                "properties": {
                    "aliasEmail": {
                        "type": "string"
                    },
                    "aliasName": {
                        "type": "string"
                    },
                    "destinationEmail": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "dnsimple:index/letsEncryptCertificate:LetsEncryptCertificate": {
            "properties": {
                "authorityIdentifier": {
                    "type": "string"
                },
                "autoRenew": {
                    "type": "boolean"
                },
                "contactId": {
                    "type": "integer",
                    "deprecationMessage": "contact_id is deprecated and has no effect. The attribute will be removed in the next major version."
                },
                "createdAt": {
                    "type": "string"
                },
                "csr": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "expiresOn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "years": {
                    "type": "integer"
                }
            },
            "required": [
                "authorityIdentifier",
                "autoRenew",
                "createdAt",
                "csr",
                "expiresOn",
                "name",
                "state",
                "updatedAt",
                "years"
            ],
            "inputProperties": {
                "autoRenew": {
                    "type": "boolean"
                },
                "contactId": {
                    "type": "integer",
                    "deprecationMessage": "contact_id is deprecated and has no effect. The attribute will be removed in the next major version."
                },
                "domainId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "autoRenew",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LetsEncryptCertificate resources.\n",
                "properties": {
                    "authorityIdentifier": {
                        "type": "string"
                    },
                    "autoRenew": {
                        "type": "boolean"
                    },
                    "contactId": {
                        "type": "integer",
                        "deprecationMessage": "contact_id is deprecated and has no effect. The attribute will be removed in the next major version."
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "csr": {
                        "type": "string"
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "expiresOn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "years": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "dnsimple:index/record:Record": {
            "properties": {
                "domain": {
                    "type": "string"
                },
                "domainId": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "ttl": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "$ref": "#/types/dnsimple:index:RecordType"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "domain",
                "domainId",
                "hostname",
                "name",
                "priority",
                "type",
                "value"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "ttl": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "$ref": "#/types/dnsimple:index:RecordType",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "domain",
                "name",
                "type",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Record resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "domainId": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "$ref": "#/types/dnsimple:index:RecordType",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "dnsimple:index/zoneRecord:ZoneRecord": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "qualifiedName": {
                    "type": "string"
                },
                "ttl": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string"
                },
                "zoneName": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "priority",
                "qualifiedName",
                "type",
                "value",
                "zoneId",
                "zoneName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "string"
                },
                "ttl": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string"
                },
                "zoneName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "name",
                "type",
                "value",
                "zoneName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneRecord resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "string"
                    },
                    "qualifiedName": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string"
                    },
                    "zoneName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "dnsimple:index/getCertificate:getCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getCertificate.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "certificateId",
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificate.\n",
                "properties": {
                    "certificateChains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "certificateId": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "rootCertificate": {
                        "type": "string"
                    },
                    "serverCertificate": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "certificateChains",
                    "certificateId",
                    "domain",
                    "privateKey",
                    "rootCertificate",
                    "serverCertificate",
                    "id"
                ]
            }
        },
        "dnsimple:index/getZone:getZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getZone.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZone.\n",
                "properties": {
                    "accountId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "reverse": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "id",
                    "name",
                    "reverse"
                ]
            }
        }
    }
}